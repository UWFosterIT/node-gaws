{"version":3,"sources":["../../../src/modules/service.js"],"names":["Service","config","log","cache","endpoint","agentOptions","auth","uriCache","replace","uri","baseUrl","Promise","fulfill","reject","options","_options","cacheMode","debug","get","err","response","body","statusCode","_buildResult","read","write","result","_isJson","message","JSON","parse","data","e"],"mappings":"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","file":"service.js","sourcesContent":["import request from 'request';\n\nclass Service {\n  constructor(config) {\n    this.config = config;\n    this.log    = config.log;\n    this.cache  = config.cache;\n  }\n\n  _options(endpoint) {\n    return {\n      agentOptions: this.config.auth,\n      uriCache:     endpoint.replace(/\\//g, ''),\n      uri:          this.config.baseUrl + endpoint\n    };\n  }\n\n  _get(endpoint) {\n    return new Promise((fulfill, reject) => {\n      // wild    no load no save\n      // dryrun  load not save\n      // record  load and save\n      let options = this._options(endpoint);\n\n      if (this.config.cacheMode === 'wild') {\n        this.log.debug(`wild -- ${options.uri}`);\n        request.get(options, (err, response, body) => {\n          if (!err) {\n            if (response.statusCode === 404) {\n              // special case for 404 because the Student Web Service\n              // returns ugly HTML in the response body.\n              body = 'Not found.';\n            }\n            fulfill(this._buildResult(response, body));\n          } else {\n            reject(err);\n          }\n        });\n      } else if (this.config.cacheMode === 'dryrun') {\n        this.log.debug(`dryrun for ${options.uri}`);\n        let body = this.cache.read(options.uriCache);\n        if (body) {\n          let response = {};\n          response.statusCode = 200;\n          fulfill(this._buildResult(response, body));\n        } else {\n          request.get(options, (err, response, body) => {\n            if (!err) {\n              if (response.statusCode === 404) {\n                // special case for 404 because the Student Web Service\n                // returns ugly HTML in the response body.\n                body = 'Not found.';\n              }\n              fulfill(this._buildResult(response, body));\n            } else {\n              reject(err);\n            }\n          });\n        }\n      } else if (this.config.cacheMode === 'record') {\n        this.log.debug(`record -- ${options.uri}`);\n        let body = this.cache.read(options.uriCache);\n        if (body) {\n          let response = {};\n          response.statusCode = 200;\n          fulfill(this._buildResult(response, body));\n        } else {\n          request.get(options, (err, response, body) => {\n            if (!err) {\n              if (response.statusCode === 200) {\n                this.cache.write(options.uriCache, body, true);\n              } else if (response.statusCode === 404) {\n                // special case for 404 because the Student Web Service\n                // returns ugly HTML in the response body.\n                body = 'Not found.';\n              }\n              fulfill(this._buildResult(response, body));\n            } else {\n              reject(err);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  _buildResult(response, body) {\n    let result = {};\n    result.statusCode = response.statusCode;\n    if (response.statusCode != 200) {\n      if (!this._isJson(body)) {\n        result.message = body;\n      } else {\n        result.message = JSON.parse(body);\n      }\n      result.data = {};\n    } else {\n      if (this._isJson(body)) {\n        result.data = JSON.parse(body);\n      } else {\n        result.data = body;\n      }\n    }\n    return result;\n  }\n\n  _isJson(data) {\n    try {\n      JSON.parse(data);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default Service;\n"]}